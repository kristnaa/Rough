Full Project Set up along with the code 


SPRING MVC project:
------------------

-> Install extrenall tomcat server in your local machine

steps:
------
-> Download the tomcat 9 version form the https://tomcat.apache.org/download-90.cgi
-> Download the zip file as per your system configuration
-> extract the zip file in any working directory


-> in search icon find for the server -> click on create a new server -> 
Apache folder-> select Tomcat 9 version , Add> Browse > select the folder path [ where bin folder available ]> click on next > Add Spring MVC > FINISH

-> create a web mvc project with the following dependencies in pom.xml

-> add the following dependencies in pom.xml 

	spring web mvc
	jakarta servlet api
	javax servlet
	tomcat embed jasper and core



	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.3.23</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version> <!-- Use the appropriate version for your
			project -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>9.0.70</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>9.0.70</version>
		</dependency>
	</dependencies>


-> Installl the tomcat server and add the existing spring mvc project to the server.	

-> Now im ready with project setup

       -> Now create foleder -> under 
					src > main> webapp >
				
						  > WEB-INF > views   > .jsp files
						            > web.xml
							    > dispatcher-servlet.xml



web.xml
-------
-> to configure Dispatcher servlet
		
2) create a web.xml file to configure dispatcher servelet

	
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>	




Dispatcher-servlet.xml:
----------------------

-> It is used to activate

	* Handler mapping
	* controller

		
	note: Controllers will connect to ->  services, DAO classes, entity classes ...


-> Create dispacther.servlet.xml file to configure Internal View resolver :


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.example.controller" />
    
    <mvc:annotation-driven />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

</beans>


in dispacther.servlet.xml file.
-----------------------------------

it is going to construct the path for the view page name

ex: hello.jsp


        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />


CONSTRUCT THE PATH FOR THE VIEW NAME:      /WEB-INF/views/index.jsp




-> CREATE CONTROLLER CLASS:
--------------------------



package com.example.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping("/home")
public class HelloController {

	@RequestMapping(value = "/welcome", method = RequestMethod.GET)
	public ModelAndView welcomeOne() {
		ModelAndView modelAndView = new ModelAndView("hello");
		modelAndView.addObject("message", "welcome to SPRING WEB MVC from [[[METHODE --- 1]]");
		return modelAndView;
	}

	@GetMapping
	public ModelAndView welcomeTwo() {
		ModelAndView modelAndView = new ModelAndView("hello");
		modelAndView.addObject("message", "HAIIIII welcome to SPRING WEB MVC PROJCT [METHODDE ----2 ");
		return modelAndView;
	}

	@GetMapping("/three")
	public ModelAndView welcomeThree() {
		ModelAndView modelAndView = new ModelAndView("hello");
		modelAndView.addObject("message", "HAIIIII welcome to SPRING WEB MVC PROJCT [ METHODE ----3");
		return modelAndView;
	}
	
	@GetMapping("/redirect")
	public String redirect() {
		return "redirect:/home";
	}
	
	@GetMapping("/greet")
	public String greet(Model model) {

		model.addAttribute("message", "GREETING FROM SPRING MVC");

		return "hello";
	}

}





------------------------------------------

cerate .jsp file in a new folders "WEB-INF> view > .jap file


<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
    <title>Hello Page</title>
</head>
<body>
    <h1>${message}</h1>
</body>
</html>



-------------------------------------------------


view resolver :
--------------------



<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.example.controller" />
    
    <mvc:annotation-driven />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

</beans>





      Prefix        , suffix
---------------      -------
/WEB-INF/views/ index .jsp

---------------------------------------------------------------------


URL:

localhost:8080/springwebmvc/mvc/one
